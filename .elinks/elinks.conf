## ELinks 0.11.7 configuration file

## This is ELinks configuration file. You can edit it manually,
## if you wish so; this file is edited by ELinks when you save
## options through UI, however only option values will be altered
## and missing options will be added at the end of file; if option
## is not written in this file, but in some file included from it,
## it is NOT counted as missing. Note that all your formatting,
## own comments and so on will be kept as-is.
##
## Obviously, if you don't like what ELinks is going to do with
## this file, you can change it by altering the config.saving_style
## option. Come on, aren't we friendly guys after all?
#
#
bind "main" "h" = "scroll-left"
bind "main" "j" = "scroll-down"
bind "main" "k" = "scroll-up"
bind "main" "l" = "scroll-right"
set document.colors.background = "black"
set document.colors.link = "#0087ff"
set document.colors.text = "white"
set document.colors.use_document_colors = 0
set document.colors.vlink = "#005fd7"
set ui.colors.color.status.status-bar.background = "#8787af"
set ui.colors.color.status.status-bar.text = "black"
set ui.colors.color.status.status-text.background = "#444444"
set ui.colors.color.status.status-text.text = "white"
set ui.colors.color.tabs.loading.background = "#d7d7d7"
set ui.colors.color.tabs.normal.background = "gray"
set ui.colors.color.tabs.selected.background = "#00af00"
set ui.colors.color.tabs.selected.text = "black"
set ui.colors.color.tabs.separator.background = "black"
set ui.colors.color.tabs.separator.text = "black"
set ui.colors.color.tabs.unvisited.background = "gray"
set ui.colors.color.title.title-bar.background = "#5f5f5f"
set ui.colors.color.title.title-bar.text = "white"
set ui.colors.color.title.title-text.background = "#333333"
set ui.colors.color.title.title-text.text = "white"



##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

  ## config.saving_style_w [0|1]
  #  This is internal option used when displaying a warning about
  #  obsolete config.saving_style. You shouldn't touch it.
  set config.saving_style_w = 1


## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.links 
    #  Options for handling of links to other documents.

      ## document.browse.links.numbering [0|1]
      #  Display numbers next to the links.
      set document.browse.links.numbering = 1

      ## document.browse.links.number_keys_select_link <num>
      #  Number keys select links rather than specify command prefixes. This
      #  is a tristate:
      #  0 means never
      #  1 means if document.browse.links.numbering = 1
      #  2 means always
      set document.browse.links.number_keys_select_link = 1




## ui 
#  User interface options.

  ## ui.language <language>
  #  Language of user interface. 'System' means that the language will
  #  be extracted from the environment dynamically.
  set ui.language = "System"





##############################
# Automatically saved options
#

## document 
#  Document options.

  ## document.browse 
  #  Document browsing options (mainly interactivity).

    ## document.browse.forms 
    #  Options for handling of the forms interaction.

      ## document.browse.forms.confirm_submit [0|1]
      #  Ask for confirmation when submitting a form.
      set document.browse.forms.confirm_submit = 0




## ui 
#  User interface options.

  ## ui.success_msgbox [0|1]
  #  When you pressed a [ Save ] button in some manager, this option
  #  will make sure that a box confirming success of the operation will
  #  pop up.
  set ui.success_msgbox = 0





##############################
# Automatically saved options
#

## config 
#  Configuration handling options.

    ## config.indentation <num>
    #  Shift width of one indentation level in the configuration
    #  file. Zero means that no indentation is performed at all
    #  when saving the configuration.
    set config.indentation = 4

    ## config.saving_style <num>
    #  Determines what happens when you tell ELinks to save options:
    #  0 is only values of current options are altered
    #  1 is values of current options are altered and missing options
    #       are added at the end of the file
    #  2 is the configuration file is rewritten from scratch
    #  3 is values of current options are altered and missing options
    #       CHANGED during this ELinks session are added at the end of
    #       the file
    set config.saving_style = 3

    ## config.i18n [0|1]
    #  If set to 1, comments in the configuration file will be
    #  translated to the language used by UI. Note that if you have
    #  different language set in different terminals, the language
    #  used in the configuration file MAY be the same as on the
    #  terminal where you saved the file, but it should be generally
    #  considered unpredictable.
    set config.i18n = 0


## cookies 
#  Cookies options.

    ## cookies.accept_policy <num>
    #  Cookies accepting policy:
    #  0 is accept no cookies
    #  1 is ask for confirmation before accepting cookie
    #  2 is accept all cookies
    set cookies.accept_policy = 2

    ## cookies.max_age <num>
    #  Cookie maximum age (in days):
    #  -1 is use cookie's expiration date if any
    #  0  is force expiration at the end of session, ignoring cookie's
    #     expiration date
    #  1+ is use cookie's expiration date, but limit age to the given
    #     number of days
    set cookies.max_age = -1

    ## cookies.paranoid_security [0|1]
    #  When enabled, we'll require three dots in cookies domain for all
    #  non-international domains (instead of just two dots). Some countries
    #  have generic second level domains (eg. .com.pl, .co.uk) and allowing
    #  sites to set cookies for these generic domains could potentially be
    #  very bad. Note, it is off by default as it breaks a lot of sites.
    set cookies.paranoid_security = 0

    ## cookies.save [0|1]
    #  Whether cookies should be loaded from and saved to disk.
    set cookies.save = 1

    ## cookies.resave [0|1]
    #  Save cookies after each change in cookies list? No effect when
    #  cookie saving (cookies.save) is off.
    set cookies.resave = 1


## document 
#  Document options.

    ## document.browse 
    #  Document browsing options (mainly interactivity).

        ## document.browse.accesskey 
        #  Options for handling of link access keys.
        #  An HTML document can use the ACCESSKEY attribute to assign
        #  an access key to an element. When an access key is pressed,
        #  the corresponding element will be given focus.

            ## document.browse.accesskey.auto_follow [0|1]
            #  Automatically follow a link or submit a form if appropriate
            #  accesskey is pressed - this is the standard behaviour, but it's
            #  considered dangerous.
            set document.browse.accesskey.auto_follow = 0

            ## document.browse.accesskey.display [0|1]
            #  Display access key in link info.
            set document.browse.accesskey.display = 0

            ## document.browse.accesskey.priority <num>
            #  Priority of 'accesskey' HTML attribute:
            #  0 is first try all normal bindings; if it fails, check accesskey
            #  1 is first try only frame bindings; if it fails, check accesskey
            #  2 is first check accesskey (this can be dangerous)
            set document.browse.accesskey.priority = 0


        ## document.browse.forms 
        #  Options for handling of the forms interaction.

            ## document.browse.forms.auto_submit [0|1]
            #  Automagically submit a form when enter is pressed with a text
            #  field selected.
            set document.browse.forms.auto_submit = 1

            ## document.browse.forms.input_size <num>
            #  Default form input size if none is specified.
            set document.browse.forms.input_size = 20

            ## document.browse.forms.insert_mode [0|1]
            #  The setting for this option affects how key presses are handled
            #  when one selects a text-input form-field. When enabled, one must
            #  explicitly 'enter' a selected text-field to edit it; this
            #  prevents
            #  text fields from capturing key presses, such as presses of a
            #  scroll
            #  key, when it is inadvertently selected. When disabled, key
            #  presses
            #  are always inserted into a selected text field.
            set document.browse.forms.insert_mode = 1

            ## document.browse.forms.editor <str>
            #  Path to the executable that ELinks should launch when the user
            #  requests to edit a textarea with an external editor.
            #  If this is blank, ELinks will use the value of the environmental
            #  variable $EDITOR. If $EDITOR is empty or not set, ELinks will
            #  then
            #  default to "vi".
            set document.browse.forms.editor = "vim"

            ## document.browse.forms.show_formhist [0|1]
            #  Ask if a login form should be saved to file or not.
            #  This option only disables the dialog, already saved login
            #  forms are unaffected.
            set document.browse.forms.show_formhist = 0


        ## document.browse.images 
        #  Options for handling of images.

            ## document.browse.images.display_style <num>
            #  Display style for image tags when displayed:
            #  0     means always display IMG
            #  1     means always display filename
            #  2     means display alt/title attribute if possible, IMG if not
            #  3     means display alt/title attribute if possible, filename if
            #  not
            set document.browse.images.display_style = 2

            ## document.browse.images.filename_maxlen <num>
            #  Maximum length of image filename when displayed:
            #  0     means always display full filename
            #  1-500 means display filename with this maximal length;
            #        if it is longer, the middle is substituted by an asterisk
            set document.browse.images.filename_maxlen = 0


        ## document.browse.links 
        #  Options for handling of links to other documents.

            ## document.browse.links.target_blank <num>
            #  Define how to handle links having target=_blank set:
            #  0 means open link in current tab
            #  1 means open link in new tab in foreground
            #  2 means open link in new tab in background
            #  3 means open link in new window
            set document.browse.links.target_blank = 0

            ## document.browse.links.use_tabindex [0|1]
            #  Whether to navigate links using tabindex specified ordering.
            #  The TABINDEX attribute in HTML elements specifies the order
            #  in which links should receive focus when using the keyboard
            #  to navigate the document.
            set document.browse.links.use_tabindex = 1







##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

    ## terminal.xterm-256color 
    #  Options specific to this terminal type (according to $TERM value).

        ## terminal.xterm-256color.block_cursor [0|1]
        set terminal.xterm-256color.block_cursor = 1
        ## terminal.xterm-256color.utf_8_io [0|1]
        set terminal.xterm-256color.utf_8_io = 1
        ## terminal.xterm-256color.m11_hack [0|1]
        set terminal.xterm-256color.m11_hack = 1
        ## terminal.xterm-256color.type <num>
        set terminal.xterm-256color.type = 2





##############################
# Automatically saved options
#

## terminal 
#  Terminal options.

    ## terminal.xterm-256color 
    #  Options specific to this terminal type (according to $TERM value).

        ## terminal.xterm-256color.transparency [0|1]
        set terminal.xterm-256color.transparency = 1





##############################
# Automatically saved options
#

## document 
#  Document options.

    ## document.css 
    #  Options concerning how to use CSS for styling documents.

        ## document.css.enable [0|1]
        #  Enable adding of CSS style info to documents.
        set document.css.enable = 1

        ## document.css.import [0|1]
        #  When enabled any external style sheets that are imported from
        #  either CSS itself using the @import keyword or from the HTML using
        #  <link> tags in the document header will also be downloaded.
        set document.css.import = 1

        ## document.css.stylesheet <str>
        #  The path to the file containing the default user defined
        #  Cascading Style Sheet. It can be used to control the basic
        #  layout of HTML documents. The path is assumed to be relative
        #  to ELinks' home directory.
        #  Leave as "" to use built-in document styling.
        set document.css.stylesheet = ""


    ## document.html 
    #  Options concerning the display of HTML pages.

        ## document.html.display_frames [0|1]
        #  Display frames.
        set document.html.display_frames = 1



